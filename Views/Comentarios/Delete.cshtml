@model LuccasCorpVX.Models.Comentario

<main aria-labelledby="title" class="container mt-5">
    <!-- Coluna da Imagem -->
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-center align-items-center bg-custom-blue" style="height: 150px;">
            <img src="~/Images/logo_ufop_horizontal.png" alt="Logo UFOP" class="img-fluid rounded" style="max-width: 80%; height: auto;" />
        </div>
    </div>

    <div>
        <h6>
            <br />
            Este site utiliza inteligência artificial para filtrar automaticamente conteúdos ofensivos, incluindo insultos e preconceitos.
            <br />
            Nosso objetivo é criar um espaço respeitoso e seguro para todos. Caso encontre algum problema, entre em contato conosco.
        </h6>
    </div>

    <!-- Detalhes do comentário com o mesmo estilo de criação -->
    <div class="form bg-light p-4 rounded mt-4">
        <h4 style="color: red;">Você tem certeza de que deseja excluir isso?</h4>
        <hr />

        <!-- Título -->
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-form-label" })
            <div class="col-12">
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Titulo)
                </div>
            </div>
        </div>

        <!-- Descrição -->
        <div class="form-group mb-3">
            @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "col-form-label" })
            <div class="col-12">
                <div class="form-control mytextarea rounded-3 shadow-sm w-100" style="border: none; background: transparent;" rows="12">
                    @Html.DisplayFor(model => model.Descricao)
                </div>
            </div>
        </div>

        <!-- Autor e Disciplina/Professor -->
        <div class="form-group mb-3 row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Autor)
                </div>
            </div>

            @if (Model.Disciplina != 0)
            {
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Disciplina, htmlAttributes: new { @class = "col-form-label" })
                    <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                        @Html.DisplayFor(model => model.DisciplinaNome)
                    </div>
                </div>
            }
            else
            {
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "col-form-label" })
                    <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                        @Html.DisplayFor(model => model.ProfessorNome)
                    </div>
                </div>
            }
        </div>

        <!-- Sentimento e Data de Criação -->
        <div class="form-group mb-3 row">
            <div class="col-md-6">
                @Html.LabelFor(model => model.Sentimento, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Sentimento)
                </div>
            </div>

            <div class="col-md-6">
                @Html.LabelFor(model => model.CreatedOn, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.CreatedOn)
                </div>
            </div>
        </div>

        <!-- Sentimentos Positivos, Negativos e Neutros -->
        <div class="form-group mb-3 row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Positivo, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Positivo)
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Negativo, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Negativo)
                </div>
            </div>

            <div class="col-md-4">
                @Html.LabelFor(model => model.Negativo, htmlAttributes: new { @class = "col-form-label" })
                <div class="form-control rounded-pill shadow-sm w-100" style="border: none; background: transparent;">
                    @Html.DisplayFor(model => model.Negativo)
                </div>
            </div>
        </div>

    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="mt-4">
            <input type="submit" value="Confirmar Exclusão" class="btn btn-danger" />
        </div>

    }

</main>