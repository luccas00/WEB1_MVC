@model LuccasCorpVX.Models.Comentario

<main aria-labelledby="title" class="container mt-5">
    <!-- Coluna da Imagem -->
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-center align-items-center bg-custom-blue" style="height: 150px;">
            <img src="~/Images/logo_ufop_horizontal.png" alt="Logo UFOP" class="img-fluid rounded" style="max-width: 80%; height: auto;" />
        </div>
    </div>

    <div>
        <h6>
            <br />
            Este site utiliza inteligência artificial para filtrar automaticamente conteúdos ofensivos, incluindo insultos e preconceitos.
            <br />
            Nosso objetivo é criar um espaço respeitoso e seguro para todos. Caso encontre algum problema, entre em contato conosco.
        </h6>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form bg-light p-4 rounded mt-4">
            <h4>Envie sua mensagem</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control rounded-pill shadow-sm" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control mytextarea rounded-3 shadow-sm", rows = 6 } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.TextBoxFor(model => model.Autor, new { @Value = ViewBag.AutorEmail, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                    @Html.ValidationMessageFor(model => model.Autor, "", new { @class = "text-danger" })
                </div>
            </div>

            @if (ViewBag.Tipo == "Disciplina")
            {
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Disciplina, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @ViewBag.Disciplina

                        <!-- Campo oculto que contém o ID real da disciplina, enviado no formulário -->
                        @Html.HiddenFor(model => model.Disciplina, new { @Value = ViewBag.Id, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.DisciplinaNome, new { @Value = ViewBag.Disciplina, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                    </div>
                </div>
            }
            else
            {
            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @ViewBag.Professor

                        <!-- Campo oculto que contém o ID real da disciplina, enviado no formulário -->
                        @Html.HiddenFor(model => model.Professor, new { @Value = ViewBag.Id, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                        @Html.HiddenFor(model => model.ProfessorNome, new { @Value = ViewBag.Professor, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                    </div>
                </div>
            </div>
            }

            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" class="btn btn-primary rounded-pill shadow-sm px-4 py-2">Enviar</button>
                </div>
            </div>

            <br />
            <br />
        </div>

    }

</main>