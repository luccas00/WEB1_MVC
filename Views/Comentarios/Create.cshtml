@model LuccasCorpVX.Models.Comentario

<main aria-labelledby="title" class="container mt-5">
    <!-- Coluna da Imagem -->
    <div class="row mb-4">
        <div class="col-12 d-flex justify-content-center align-items-center bg-custom-blue" style="height: 150px;">
            <img src="~/Images/logo_ufop_horizontal.png" alt="Logo UFOP" class="img-fluid rounded" style="max-width: 80%; height: auto;" />
        </div>
    </div>

    <div>
        <h6>
            <br />
            Este site utiliza inteligência artificial para filtrar automaticamente conteúdos ofensivos, incluindo insultos e preconceitos.
            <br />
            Nosso objetivo é criar um espaço respeitoso e seguro para todos. Caso encontre algum problema, entre em contato conosco.
        </h6>
    </div>

    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form bg-light p-4 rounded mt-4">
            <h4>Envie sua mensagem</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Titulo, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Titulo, new { htmlAttributes = new { @class = "form-control rounded-pill shadow-sm", id = "titulo" } })
                    @Html.ValidationMessageFor(model => model.Titulo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control mytextarea rounded-3 shadow-sm", id = "descricao", rows = 6 } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group mb-3">
                @Html.LabelFor(model => model.Autor, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                <div class="col-md-10">
                    @ViewBag.AutorEmail
                    @Html.HiddenFor(model => model.Autor, new { @Value = ViewBag.AutorEmail, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly", id = "autor" })
                </div>
            </div>

            @if (ViewBag.Tipo == "Disciplina")
            {
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Disciplina, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @ViewBag.Disciplina
                        @Html.HiddenFor(model => model.Disciplina, new { @Value = ViewBag.Id, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly", id = "disciplina" })
                        @Html.HiddenFor(model => model.Disciplina, new { @Value = ViewBag.Id, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly", id = "disciplina" })
                        @Html.HiddenFor(model => model.DisciplinaNome, new { @Value = ViewBag.Disciplina, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                    </div>
                </div>
            }
            else
            {
                <div class="form-group mb-3">
                    @Html.LabelFor(model => model.Professor, htmlAttributes: new { @class = "col-md-2 col-form-label" })
                    <div class="col-md-10">
                        @ViewBag.Professor
                        @Html.HiddenFor(model => model.Professor, new { @Value = ViewBag.Id, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly", id = "professor" })
                        @Html.HiddenFor(model => model.ProfessorNome, new { @Value = ViewBag.Professor, @class = "form-control rounded-pill shadow-sm", @readonly = "readonly" })
                    </div>
                </div>
            }

            <br />

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <button type="submit" id="btnEnviar" class="btn btn-primary rounded-pill shadow-sm px-4 py-2" disabled style="opacity: 0.5;">Enviar</button>
                </div>
            </div>

            <br />
            <br />
        </div>
    }
</main>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        var titulo = document.getElementById("titulo");
        var descricao = document.getElementById("descricao");
        var btnEnviar = document.getElementById("btnEnviar");

        function validarCampos() {
            if (titulo.value.trim() !== "" && descricao.value.trim() !== "") {
                btnEnviar.disabled = false;
                btnEnviar.style.opacity = "1";
            } else {
                btnEnviar.disabled = true;
                btnEnviar.style.opacity = "0.5";
            }
        }

        titulo.addEventListener("input", validarCampos);
        descricao.addEventListener("input", validarCampos);
    });
</script>